/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_progra;

import Clases.Equipo;
import Clases.Integrante;
import Clases.Juez;
import Clases.Torneo;
import Clases.Usuario;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose
 */
public class Main extends javax.swing.JFrame {

    ArrayList<Equipo> equipos;
    ArrayList<Torneo> torneos;
    ArrayList<Usuario> usuarios;
    ArrayList<Juez> jueces;
    String NombreLogged;
    /**
     * Creates new form Main
     */
    public Main() {
        equipos = new ArrayList<Equipo>();
        torneos = new ArrayList<Torneo>();
        usuarios = new ArrayList<Usuario>();
        jueces = new ArrayList<Juez>();
        NombreLogged = "";
        initComponents();
        initArreglos();
        llenarAdminTables();
        CerrarSesionBtn.setVisible(false);
        NoTorneoPanel.setVisible(false);
        NoTorneoJuezPanel.setVisible(false);
        JuezInternalFrame.setVisible(false);
        AdminInternalFrame.setVisible(false);
        PanelIndicaciones.setVisible(false);
        ParticipanteInternalFrame.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        JuezInternalFrame = new javax.swing.JInternalFrame();
        NoTorneoJuezPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        PanelIndicaciones = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        CerrarIndicaciones = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        TorneoJuezLabel = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        CalificacionesTable = new javax.swing.JTable();
        DistribucionPuntosButton = new javax.swing.JButton();
        GuardarCalificacionesButton = new javax.swing.JButton();
        ParticipanteInternalFrame = new javax.swing.JInternalFrame();
        NoTorneoPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        TorneoTxtPar = new javax.swing.JLabel();
        TorneoTxtPar1 = new javax.swing.JLabel();
        puntuacionPartxt = new javax.swing.JLabel();
        TorneoTxtPar2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        PosicionesTable = new javax.swing.JTable();
        AdminInternalFrame = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JuecesTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        EquiposTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TorneosTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        ModificarJuezBtn = new javax.swing.JButton();
        AgregarJuezBtn = new javax.swing.JButton();
        AgregarEquipoBtn = new javax.swing.JButton();
        ModificarEquipoBtn = new javax.swing.JButton();
        AgregarTorneoBtn = new javax.swing.JButton();
        ModificarTorneoBtn = new javax.swing.JButton();
        AgregarUsuarioBtn = new javax.swing.JButton();
        ModificarUsuarioBtn = new javax.swing.JButton();
        LogInPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ContrasenaTxtPanel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CorreoTxtPanel = new javax.swing.JTextField();
        LogInBtnPanel = new javax.swing.JButton();
        CerrarSesionBtn = new javax.swing.JButton();

        jLabel2.setText("Correo");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1100, 800));
        setMinimumSize(new java.awt.Dimension(1100, 800));
        getContentPane().setLayout(null);

        JuezInternalFrame.setVisible(true);
        JuezInternalFrame.getContentPane().setLayout(null);

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel20.setText("No esta asignado a ningun torneo");

        javax.swing.GroupLayout NoTorneoJuezPanelLayout = new javax.swing.GroupLayout(NoTorneoJuezPanel);
        NoTorneoJuezPanel.setLayout(NoTorneoJuezPanelLayout);
        NoTorneoJuezPanelLayout.setHorizontalGroup(
            NoTorneoJuezPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoTorneoJuezPanelLayout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jLabel20)
                .addContainerGap(409, Short.MAX_VALUE))
        );
        NoTorneoJuezPanelLayout.setVerticalGroup(
            NoTorneoJuezPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoTorneoJuezPanelLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jLabel20)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        JuezInternalFrame.getContentPane().add(NoTorneoJuezPanel);
        NoTorneoJuezPanel.setBounds(0, 0, 990, 310);

        PanelIndicaciones.setLayout(null);

        jLabel12.setText("Puntaje por tiempo:");
        PanelIndicaciones.add(jLabel12);
        jLabel12.setBounds(10, 70, 140, 15);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("De 10 a 25 minutos - 10 puntos");
        PanelIndicaciones.add(jLabel13);
        jLabel13.setBounds(60, 120, 270, 30);

        jLabel14.setText("los coloca en la celda correspondiente segun el equipo y la ronda.");
        PanelIndicaciones.add(jLabel14);
        jLabel14.setBounds(30, 200, 320, 15);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setText("De 1 a 10 puntos");
        PanelIndicaciones.add(jLabel15);
        jLabel15.setBounds(80, 30, 210, 30);

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("De 25 a 30 minutos - 5 puntos");
        PanelIndicaciones.add(jLabel16);
        jLabel16.setBounds(60, 90, 270, 30);

        jLabel17.setText("Puntaje por calidad del platillo");
        PanelIndicaciones.add(jLabel17);
        jLabel17.setBounds(12, 12, 140, 15);

        jLabel18.setText("* Los puntaje por tiempo empiezan a regir apartir de los 10 minutos");
        PanelIndicaciones.add(jLabel18);
        jLabel18.setBounds(20, 160, 320, 15);

        jLabel19.setText("y son puntos extra de el puntaje por calidad, sume ambos y ");
        PanelIndicaciones.add(jLabel19);
        jLabel19.setBounds(30, 180, 310, 15);

        CerrarIndicaciones.setText("Cerrar");
        CerrarIndicaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarIndicacionesActionPerformed(evt);
            }
        });
        PanelIndicaciones.add(CerrarIndicaciones);
        CerrarIndicaciones.setBounds(130, 220, 100, 25);

        JuezInternalFrame.getContentPane().add(PanelIndicaciones);
        PanelIndicaciones.setBounds(190, 60, 370, 250);

        jPanel7.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        JuezInternalFrame.getContentPane().add(jPanel7);
        jPanel7.setBounds(10, 10, 970, 40);

        jPanel8.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        JuezInternalFrame.getContentPane().add(jPanel8);
        jPanel8.setBounds(10, 260, 970, 40);

        TorneoJuezLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TorneoJuezLabel.setText("jLabel12");
        JuezInternalFrame.getContentPane().add(TorneoJuezLabel);
        TorneoJuezLabel.setBounds(10, 50, 200, 40);

        CalificacionesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Equipo", "Ronda 1", "Ronda 2", "Ronda 3"
            }
        ));
        jScrollPane6.setViewportView(CalificacionesTable);

        JuezInternalFrame.getContentPane().add(jScrollPane6);
        jScrollPane6.setBounds(10, 100, 960, 110);

        DistribucionPuntosButton.setText("Ver distribución de puntos");
        DistribucionPuntosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DistribucionPuntosButtonActionPerformed(evt);
            }
        });
        JuezInternalFrame.getContentPane().add(DistribucionPuntosButton);
        DistribucionPuntosButton.setBounds(580, 220, 190, 25);

        GuardarCalificacionesButton.setText("Guardar calificaciones");
        GuardarCalificacionesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCalificacionesButtonActionPerformed(evt);
            }
        });
        JuezInternalFrame.getContentPane().add(GuardarCalificacionesButton);
        GuardarCalificacionesButton.setBounds(780, 220, 190, 25);

        getContentPane().add(JuezInternalFrame);
        JuezInternalFrame.setBounds(30, 30, 1000, 350);

        ParticipanteInternalFrame.setVisible(true);
        ParticipanteInternalFrame.getContentPane().setLayout(null);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("Su equipo no esta participando en ningun torneo");

        javax.swing.GroupLayout NoTorneoPanelLayout = new javax.swing.GroupLayout(NoTorneoPanel);
        NoTorneoPanel.setLayout(NoTorneoPanelLayout);
        NoTorneoPanelLayout.setHorizontalGroup(
            NoTorneoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoTorneoPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel11)
                .addContainerGap(90, Short.MAX_VALUE))
        );
        NoTorneoPanelLayout.setVerticalGroup(
            NoTorneoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoTorneoPanelLayout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel11)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        ParticipanteInternalFrame.getContentPane().add(NoTorneoPanel);
        NoTorneoPanel.setBounds(0, 0, 550, 500);

        jPanel5.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        ParticipanteInternalFrame.getContentPane().add(jPanel5);
        jPanel5.setBounds(10, 10, 530, 40);

        jPanel6.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        ParticipanteInternalFrame.getContentPane().add(jPanel6);
        jPanel6.setBounds(10, 460, 520, 40);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel9.setText("Información del equipo");
        ParticipanteInternalFrame.getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 60, 470, 60);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Torneo:");
        ParticipanteInternalFrame.getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 130, 90, 20);

        TorneoTxtPar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TorneoTxtPar.setText("jLabel11");
        ParticipanteInternalFrame.getContentPane().add(TorneoTxtPar);
        TorneoTxtPar.setBounds(20, 160, 160, 25);

        TorneoTxtPar1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TorneoTxtPar1.setText("Tabla de posiciones");
        ParticipanteInternalFrame.getContentPane().add(TorneoTxtPar1);
        TorneoTxtPar1.setBounds(250, 130, 220, 40);

        puntuacionPartxt.setFont(new java.awt.Font("Segoe UI", 1, 100)); // NOI18N
        puntuacionPartxt.setForeground(new java.awt.Color(98, 98, 221));
        puntuacionPartxt.setText("20");
        ParticipanteInternalFrame.getContentPane().add(puntuacionPartxt);
        puntuacionPartxt.setBounds(80, 210, 150, 140);

        TorneoTxtPar2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        TorneoTxtPar2.setText("Puntuacion actual");
        ParticipanteInternalFrame.getContentPane().add(TorneoTxtPar2);
        TorneoTxtPar2.setBounds(60, 340, 160, 40);

        PosicionesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Puntuación"
            }
        ));
        jScrollPane5.setViewportView(PosicionesTable);

        ParticipanteInternalFrame.getContentPane().add(jScrollPane5);
        jScrollPane5.setBounds(250, 170, 280, 270);

        getContentPane().add(ParticipanteInternalFrame);
        ParticipanteInternalFrame.setBounds(40, 10, 560, 540);

        AdminInternalFrame.setVisible(true);
        AdminInternalFrame.getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        AdminInternalFrame.getContentPane().add(jPanel4);
        jPanel4.setBounds(10, 490, 970, 40);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Jueces");
        AdminInternalFrame.getContentPane().add(jLabel5);
        jLabel5.setBounds(820, 70, 80, 20);

        jPanel1.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 970, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        AdminInternalFrame.getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 970, 40);

        JuecesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre"
            }
        ));
        jScrollPane1.setViewportView(JuecesTable);

        AdminInternalFrame.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(760, 100, 210, 300);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Equipos");
        AdminInternalFrame.getContentPane().add(jLabel6);
        jLabel6.setBounds(70, 60, 70, 30);

        EquiposTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre"
            }
        ));
        EquiposTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(EquiposTable);
        EquiposTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        AdminInternalFrame.getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(20, 100, 190, 300);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Torneos");
        AdminInternalFrame.getContentPane().add(jLabel7);
        jLabel7.setBounds(290, 60, 70, 30);

        TorneosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre"
            }
        ));
        jScrollPane3.setViewportView(TorneosTable);

        AdminInternalFrame.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(230, 100, 190, 300);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Usuarios");
        AdminInternalFrame.getContentPane().add(jLabel8);
        jLabel8.setBounds(540, 60, 80, 30);

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Tipo"
            }
        ));
        jScrollPane4.setViewportView(UserTable);

        AdminInternalFrame.getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(440, 100, 300, 300);

        ModificarJuezBtn.setText("Modificar Juez");
        ModificarJuezBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarJuezBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(ModificarJuezBtn);
        ModificarJuezBtn.setBounds(760, 450, 210, 25);

        AgregarJuezBtn.setText("Agregar Juez");
        AgregarJuezBtn.setToolTipText("");
        AgregarJuezBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarJuezBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(AgregarJuezBtn);
        AgregarJuezBtn.setBounds(760, 410, 210, 25);

        AgregarEquipoBtn.setText("Agregar Equipo");
        AgregarEquipoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarEquipoBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(AgregarEquipoBtn);
        AgregarEquipoBtn.setBounds(20, 410, 190, 25);

        ModificarEquipoBtn.setText("Modificar Equipo");
        ModificarEquipoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarEquipoBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(ModificarEquipoBtn);
        ModificarEquipoBtn.setBounds(20, 450, 190, 25);

        AgregarTorneoBtn.setText("Agregar Torneo");
        AgregarTorneoBtn.setToolTipText("");
        AgregarTorneoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarTorneoBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(AgregarTorneoBtn);
        AgregarTorneoBtn.setBounds(230, 410, 190, 25);

        ModificarTorneoBtn.setText("Modificar Torneo");
        ModificarTorneoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarTorneoBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(ModificarTorneoBtn);
        ModificarTorneoBtn.setBounds(230, 450, 190, 25);

        AgregarUsuarioBtn.setText("Agregar Usuario");
        AgregarUsuarioBtn.setToolTipText("");
        AgregarUsuarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarUsuarioBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(AgregarUsuarioBtn);
        AgregarUsuarioBtn.setBounds(440, 410, 300, 25);

        ModificarUsuarioBtn.setText("Modificar Usuario");
        ModificarUsuarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarUsuarioBtnActionPerformed(evt);
            }
        });
        AdminInternalFrame.getContentPane().add(ModificarUsuarioBtn);
        ModificarUsuarioBtn.setBounds(440, 450, 300, 25);

        getContentPane().add(AdminInternalFrame);
        AdminInternalFrame.setBounds(10, 10, 1000, 580);

        LogInPanel.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        LogInPanel.add(jPanel2);
        jPanel2.setBounds(0, 0, 330, 20);

        jPanel3.setBackground(new java.awt.Color(98, 98, 221));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        LogInPanel.add(jPanel3);
        jPanel3.setBounds(0, 360, 330, 20);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setText("Log In");
        LogInPanel.add(jLabel1);
        jLabel1.setBounds(90, 50, 160, 64);

        ContrasenaTxtPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContrasenaTxtPanelActionPerformed(evt);
            }
        });
        LogInPanel.add(ContrasenaTxtPanel);
        ContrasenaTxtPanel.setBounds(70, 210, 190, 20);

        jLabel3.setText("Contraseña");
        LogInPanel.add(jLabel3);
        jLabel3.setBounds(130, 190, 80, 15);

        jLabel4.setText("Correo");
        LogInPanel.add(jLabel4);
        jLabel4.setBounds(140, 130, 50, 15);

        CorreoTxtPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorreoTxtPanelActionPerformed(evt);
            }
        });
        LogInPanel.add(CorreoTxtPanel);
        CorreoTxtPanel.setBounds(70, 150, 190, 20);

        LogInBtnPanel.setText("Iniciar");
        LogInBtnPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogInBtnPanelMouseClicked(evt);
            }
        });
        LogInPanel.add(LogInBtnPanel);
        LogInBtnPanel.setBounds(69, 250, 190, 30);

        getContentPane().add(LogInPanel);
        LogInPanel.setBounds(370, 110, 330, 380);

        CerrarSesionBtn.setText("Cerrar sesión");
        CerrarSesionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarSesionBtnActionPerformed(evt);
            }
        });
        getContentPane().add(CerrarSesionBtn);
        CerrarSesionBtn.setBounds(880, 620, 130, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initArreglos(){
        Integrante[] IntegrantesE1 = new Integrante[2];
        Integrante[] IntegrantesE2 = new Integrante[2];
        Integrante[] IntegrantesE3 = new Integrante[2];
        Integrante[] IntegrantesE4 = new Integrante[2];
        Integrante integrante1e1 = new Integrante("Jose Cedeno",25,"Costa Rica");
        Integrante integrante2e1 = new Integrante("Fabian Vargas",30,"Mexico");
        IntegrantesE1[0] = integrante1e1;
        IntegrantesE1[1] = integrante2e1;
        Integrante integrante1e2 = new Integrante("Aaron Carballo",45,"Nicaragua");
        Integrante integrante2e2 = new Integrante("Yedrald Valerin",20,"Argentina");
        IntegrantesE2[0] = integrante1e2;
        IntegrantesE2[1] = integrante2e2;
        Integrante integrante1e3 = new Integrante("Priscila Madrigal",32,"Costa Rica");
        Integrante integrante2e3 = new Integrante("Laura Madrigal",27,"España");
        IntegrantesE3[0] = integrante1e3;
        IntegrantesE3[1] = integrante2e3;
        Integrante integrante1e4 = new Integrante("Gregory Solano",22,"Ecuador");
        Integrante integrante2e4 = new Integrante("Fabian Piedra",35,"España");
        IntegrantesE4[0] = integrante1e4;
        IntegrantesE4[1] = integrante2e4;
        Equipo equipo1 = new Equipo(1,"Los reyes de la cocina",0,IntegrantesE1,"Master Chef");
        Equipo equipo2 = new Equipo(2,"Ollas locas",0,IntegrantesE2,"Master Chef");
        Equipo equipo3 = new Equipo(3,"Las espatulas de oro",0,IntegrantesE3,"Master Chef");
        Equipo equipo4 = new Equipo(4,"Los huevo frito",0,IntegrantesE4,"Master Chef");
        equipos.add(equipo1);
        equipos.add(equipo2);
        equipos.add(equipo3);
        equipos.add(equipo4);
        
        Equipo[] equiposTorneo = new Equipo[4];
        equiposTorneo[0] = equipo1;
        equiposTorneo[1] = equipo2;
        equiposTorneo[2] = equipo3;
        equiposTorneo[3] = equipo4;
        
        Torneo torneo1 = new Torneo(1,"Master Chef",equiposTorneo,"12/10/2022");
        torneos.add(torneo1);
        
        Usuario user1 = new Usuario(1,"Jose Cedeno","jose@gmail.com","123","Participante");
        Usuario user2 = new Usuario(2,"Gary Valverde","gary@gmail.com","123","Juez");
        Usuario user3 = new Usuario(3,"Angelina Jimenez","angelina@gmail.com","123","Admin");
        usuarios.add(user1);
        usuarios.add(user2);
        usuarios.add(user3);
        
        Juez juez1 = new Juez(1,"Gary Valverde",55,"Master Chef");
        jueces.add(juez1);
    }
    
    private void initParticipantesFrame(){
        
        String Torneo = "";
        Integer Puntuacion = 0;
        Boolean noTorneo = true;
        ArrayList<Equipo> equiposTorneo = new ArrayList<Equipo>();
        for(Equipo equipo : equipos){
            for(Integrante par:equipo.getIntegrantes()){
                if(par.getNombre().equals(NombreLogged)){
                    if(equipo.getTorneo().isEmpty()){
                        NoTorneoPanel.setVisible(true);
                        break;
                    }
                    else{
                        Torneo = equipo.getTorneo();
                        Puntuacion = equipo.getPuntos();
                        noTorneo = false;
                        break;
                    }  
                }
            }
        }
        if(noTorneo != true){
            for(Equipo equipo : equipos){
            if(equipo.getTorneo().equals(Torneo)){
                equiposTorneo.add(equipo);
            }
            }
            Collections.sort(equiposTorneo, new Comparator<Equipo>(){
                public int compare(Equipo e1, Equipo e2){
                    return e2.getPuntos().compareTo(e1.getPuntos());
                }
            });

            puntuacionPartxt.setText(Puntuacion.toString());
            TorneoTxtPar.setText(Torneo);
            DefaultTableModel modelPosiciones = (DefaultTableModel) PosicionesTable.getModel();
            modelPosiciones.setRowCount(0);
            Object rowDataEquipo[] = new Object[2];
            for(int i = 0; i < equiposTorneo.size(); i++){
                rowDataEquipo[0] = equiposTorneo.get(i).getNombre();
                rowDataEquipo[1] = equiposTorneo.get(i).getPuntos();
                modelPosiciones.addRow(rowDataEquipo);
            }
        }
    }
    
    private void ContrasenaTxtPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContrasenaTxtPanelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ContrasenaTxtPanelActionPerformed

    private void CorreoTxtPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorreoTxtPanelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CorreoTxtPanelActionPerformed

    private void initJuezFrame(){
        String torneoNombre = "";
        Torneo Torneo = null;
        Boolean noTorneo = true;
        for(Juez ju: jueces){
            if(ju.getNombre().equals(NombreLogged)){
                if(ju.getTorneo().isEmpty())
                {
                    NoTorneoJuezPanel.setVisible(true);
                }
                else{
                    torneoNombre = ju.getTorneo();
                    noTorneo = false;
                } 
            }
        }
        if(noTorneo != true){
            for(Torneo tr: torneos){
                if(tr.getNombre().equals(torneoNombre)){
                    Torneo = tr;
                }
            }
            TorneoJuezLabel.setText(torneoNombre);
            DefaultTableModel modelCalificaciones = (DefaultTableModel) CalificacionesTable.getModel();
            modelCalificaciones.setRowCount(0);
            Object rowDataEquipo[] = new Object[2];
            for(int i = 0; i < Torneo.getEquipos().length; i++){
                rowDataEquipo[0] = Torneo.getEquipos()[i].getNombre();
                modelCalificaciones.addRow(rowDataEquipo);
            }
        }
    }
    
    private void LogInBtnPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogInBtnPanelMouseClicked
        String correo = CorreoTxtPanel.getText();
        String contrasena = ContrasenaTxtPanel.getText();
        for(Usuario user :usuarios){
            if(user.getCorreo().equals(correo) && user.getContrasena().equals(contrasena)){
                NombreLogged = user.getNombre();
                if(user.getTipo().toLowerCase().equals("admin")){
                    LogInPanel.setVisible(false);
                    AdminInternalFrame.setVisible(true);
                    CerrarSesionBtn.setVisible(true);
                }
                else if(user.getTipo().toLowerCase().equals("juez")){
                    LogInPanel.setVisible(false);
                    initJuezFrame();
                    JuezInternalFrame.setVisible(true);
                    CerrarSesionBtn.setVisible(true);
                }
                else if(user.getTipo().toLowerCase().equals("participante")){
                    LogInPanel.setVisible(false);
                    initParticipantesFrame();
                    ParticipanteInternalFrame.setVisible(true);
                    CerrarSesionBtn.setVisible(true);
                }
                else {
                    JOptionPane.showMessageDialog(null,"Este usuario no tiene ningun role conocido en el sistema");
                }
            }
        }
    }//GEN-LAST:event_LogInBtnPanelMouseClicked

    private void ModificarJuezBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarJuezBtnActionPerformed
       int column = 0;
       int row = JuecesTable.getSelectedRow();
       if(row == -1){
            JOptionPane.showMessageDialog(null,"Seleccione una fila para editarla");
        }
        else{
            String value = JuecesTable.getModel().getValueAt(row, column).toString();
            String nombre = JOptionPane.showInputDialog(null,"Ingrese el nuevo nombre del juez (si deja el espacio en blanco no se aplica ningun cambio)");
            String torneo = JOptionPane.showInputDialog(null,"Ingrese el nuevo torneo del juez (si deja el espacio en blanco no se aplica ningun cambio)");
            String edad = JOptionPane.showInputDialog(null,"Ingrese la nueva edad del juez (si deja el espacio en blanco no se aplica ningun cambio)");
            for(int i = 0; i < jueces.size(); i++){
                if(jueces.get(i).getId() == Integer.parseInt(value)){
                    jueces.get(i).setNombre(nombre.isEmpty() ? jueces.get(i).getNombre() : nombre);
                    jueces.get(i).setEdad(edad.isEmpty() ? jueces.get(i).getEdad() : Integer.parseInt(edad));
                    jueces.get(i).setNombre(torneo.isEmpty() ? jueces.get(i).getTorneo(): torneo);
                }
            }
            llenarAdminTables();
       }
    }//GEN-LAST:event_ModificarJuezBtnActionPerformed

    private void AgregarJuezBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarJuezBtnActionPerformed
        Juez juezNuevo;
        Usuario usuario;
        String nombre = JOptionPane.showInputDialog(null,"Ingrese el nombre del nuevo juez");
        Boolean mayor = false;
        String edad = "";
        String correoJuez = JOptionPane.showInputDialog(null,"Ingrese el correo del nuevo juez");
        while(mayor == false){
            edad = JOptionPane.showInputDialog(null,"Ingrese la edad del nuevo juez");
            if(Integer.parseInt(edad)>=18){
                mayor = true;
            }
            else{
                JOptionPane.showMessageDialog(null,"El juez debe ser mayor de edad");
            }
        }       
        juezNuevo = new Juez(jueces.size()+1,nombre,Integer.parseInt(edad),"");
        jueces.add(juezNuevo);
        usuario = new Usuario(usuarios.size()+1,nombre,correoJuez,"123","Juez");
        usuarios.add(usuario);
        llenarAdminTables();
    }//GEN-LAST:event_AgregarJuezBtnActionPerformed

    private void AgregarEquipoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarEquipoBtnActionPerformed
        Equipo equipo;
        Integrante integrante;
        Usuario usuario;
        Integrante[] integrantes = new Integrante[2];
        String nombre = JOptionPane.showInputDialog(null,"Ingrese el nombre del nuevo equipo");
        String edadPar = "";
        for(int i = 0;i<2;i++){
            Boolean mayor = false;
            String nombrePar = JOptionPane.showInputDialog(null,"Ingrese el nombre completo del integrante " + (i+1) + " del nuevo equipo");
            String correoPar = JOptionPane.showInputDialog(null,"Ingrese el correo del integrante " + (i+1) + " del nuevo equipo");
            while(mayor == false){
                edadPar = JOptionPane.showInputDialog(null,"Ingrese la edad del integrante");
                if(Integer.parseInt(edadPar)>=18){
                    mayor = true;
                }
                else{
                    JOptionPane.showMessageDialog(null,"El participante debe ser mayor de edad");
                }
            }
            String paisPar = JOptionPane.showInputDialog(null,"Ingrese el pais del integrante");
            integrante = new Integrante(nombrePar,Integer.parseInt(edadPar),paisPar);
            integrantes[i] = integrante;
            usuario = new Usuario(usuarios.size()+1,nombrePar,correoPar,"123","Participante");
            usuarios.add(usuario);
        }
        equipo = new Equipo(equipos.size()+1,nombre,0,integrantes,"");
        equipos.add(equipo);
        llenarAdminTables();
    }//GEN-LAST:event_AgregarEquipoBtnActionPerformed

    private void ModificarEquipoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarEquipoBtnActionPerformed
        int column = 0;
        int row = EquiposTable.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(null,"Seleccione una fila para editarla");
        }
        else{
            String value = EquiposTable.getModel().getValueAt(row, column).toString();
            String nombre = JOptionPane.showInputDialog(null,"Ingrese el nuevo nombre del equipo (si deja el espacio en blanco no se aplica ningun cambio)");
            for(int i = 0; i < equipos.size(); i++){
                if(equipos.get(i).getId() == Integer.parseInt(value)){
                    equipos.get(i).setNombre(nombre.isEmpty() ? equipos.get(i).getNombre() : nombre);
                }
            }
            llenarAdminTables();
        }
        
    }//GEN-LAST:event_ModificarEquipoBtnActionPerformed

    private void llenarAdminTables(){
        DefaultTableModel modelEquipos = (DefaultTableModel) EquiposTable.getModel();
        modelEquipos.setRowCount(0);
        Object rowDataEquipo[] = new Object[2];
        for(int i = 0; i < equipos.size(); i++){
            rowDataEquipo[0] = equipos.get(i).getId();
            rowDataEquipo[1] = equipos.get(i).getNombre();
            modelEquipos.addRow(rowDataEquipo);
        }
        
        DefaultTableModel modelTorneos = (DefaultTableModel) TorneosTable.getModel();
        modelTorneos.setRowCount(0);
        Object rowDataTorneos[] = new Object[2];
        for(int i = 0; i < torneos.size(); i++){
            rowDataTorneos[0] = torneos.get(i).getId();
            rowDataTorneos[1] = torneos.get(i).getNombre();
            modelTorneos.addRow(rowDataTorneos);
        }
        
        DefaultTableModel modelUser = (DefaultTableModel) UserTable.getModel();
        modelUser.setRowCount(0);
        Object rowDataUser[] = new Object[3];
        for(int i = 0; i < usuarios.size(); i++){
            rowDataUser[0] = usuarios.get(i).getId();
            rowDataUser[1] = usuarios.get(i).getNombre();
            rowDataUser[2] = usuarios.get(i).getTipo();
            modelUser.addRow(rowDataUser);
        }
        
        DefaultTableModel modelJueces = (DefaultTableModel) JuecesTable.getModel();
        modelJueces.setRowCount(0);
        Object rowDataJueces[] = new Object[2];
        for(int i = 0; i < jueces.size(); i++){
            rowDataJueces[0] = jueces.get(i).getId();
            rowDataJueces[1] = jueces.get(i).getNombre();
            modelJueces.addRow(rowDataJueces);
        }
    }
    
    private void AgregarTorneoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarTorneoBtnActionPerformed
        Torneo torneo;
        String nombre = JOptionPane.showInputDialog(null,"Ingrese el nombre del nuevo Torneo");
        String fecha = JOptionPane.showInputDialog(null,"Ingrese la fecha del nuevo Torneo (dd/mm/yyyy)");
        Equipo[] equiposTorneo = new Equipo[4];
        for(int i = 0;i<2;i++){
            Boolean exist = false;
            String nombreEquipo = JOptionPane.showInputDialog(null,"Ingrese el nombre del equipo " + i+1 + " del nuevo torneo");
            while(exist == false){
                for(Equipo equipo:equipos){
                    if(equipo.getNombre().toLowerCase().equals(nombreEquipo.toLowerCase())){ 
                        if(equipo.getTorneo().isEmpty()){
                            exist = true;
                            equipo.setTorneo(nombre);
                            equiposTorneo[i] = equipo;
                        }
                        else{
                            JOptionPane.showMessageDialog(null,"Los equipos solo pueden participar en un torneo a la ves y este ya participa en uno");
                        }
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"El equipo que desea agregar no existe");
                    }
                }
            }
        }
        torneo = new Torneo(torneos.size()+1,nombre,equiposTorneo,fecha);
        torneos.add(torneo);
        llenarAdminTables();
    }//GEN-LAST:event_AgregarTorneoBtnActionPerformed

    private void ModificarTorneoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarTorneoBtnActionPerformed
        int column = 0;
        int row = TorneosTable.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(null,"Seleccione una fila para editarla");
        }
        else{
            String value = TorneosTable.getModel().getValueAt(row, column).toString();
            String nombre = JOptionPane.showInputDialog(null,"Ingrese el nuevo nombre del torneo (si deja el espacio en blanco no se aplica ningun cambio)");
            String fecha = JOptionPane.showInputDialog(null,"Ingrese la nueva fecha del torneo (si deja el espacio en blanco no se aplica ningun cambio)");
            for(int i = 0; i < torneos.size(); i++){
                if(torneos.get(i).getId() == Integer.parseInt(value)){
                    torneos.get(i).setNombre(nombre.isEmpty() ? torneos.get(i).getNombre() : nombre);
                    torneos.get(i).setFecha(fecha.isEmpty() ? torneos.get(i).getFecha(): fecha);
                }
            }
            llenarAdminTables();
        }
    }//GEN-LAST:event_ModificarTorneoBtnActionPerformed

    private void AgregarUsuarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarUsuarioBtnActionPerformed
        Usuario usuarioNuevo;
        String tipo = JOptionPane.showInputDialog(null,"Ingrese el tipo del nuevo usuario (juez, participante, admin)");
        if(tipo.toLowerCase().equals("juez")){
            JOptionPane.showMessageDialog(null,"Puede agregar jueces en la tabla de jueces");
        }
        else if(tipo.toLowerCase().equals("participante")){
            JOptionPane.showMessageDialog(null,"Solo se pueden agregar participantes si pertenecen aun equipo y eso lo puede hacer creando un equipo en la tabla de equipos");
        }
        else if(tipo.toLowerCase().equals("admin")){
            String nombre = JOptionPane.showInputDialog(null,"Ingrese el nombre del nuevo usuario");
            String correo = JOptionPane.showInputDialog(null,"Ingrese el correo del nuevo usuario");
            String contrasena = JOptionPane.showInputDialog(null,"Ingrese una contraseña provisional para el nuevo usuario");
            usuarioNuevo = new Usuario(usuarios.size()+1,nombre,correo,contrasena,tipo);
            usuarios.add(usuarioNuevo);
            llenarAdminTables();
        }
        else{
            JOptionPane.showMessageDialog(null,"No es un tipo valido.");
        }
    }//GEN-LAST:event_AgregarUsuarioBtnActionPerformed

    private void ModificarUsuarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarUsuarioBtnActionPerformed
        int column = 0;
        int row = UserTable.getSelectedRow();
        if(row == -1){
            JOptionPane.showMessageDialog(null,"Seleccione una fila para editarla");
        }
        else{
            String value = UserTable.getModel().getValueAt(row, column).toString();
            String nombre = JOptionPane.showInputDialog(null,"Ingrese el nuevo nombre del usuario (si deja el espacio en blanco no se aplica ningun cambio)");
            String correo = JOptionPane.showInputDialog(null,"Ingrese el nuevo correo del usuario (si deja el espacio en blanco no se aplica ningun cambio)");
            String tipo = JOptionPane.showInputDialog(null,"Ingrese el nuevo tipo del usuario (si deja el espacio en blanco no se aplica ningun cambio)");
            for(int i = 0; i < usuarios.size(); i++){
                if(usuarios.get(i).getId() == Integer.parseInt(value)){
                    usuarios.get(i).setNombre(nombre.isEmpty() ? usuarios.get(i).getNombre() : nombre);
                    usuarios.get(i).setCorreo(correo.isEmpty() ? usuarios.get(i).getCorreo(): correo);
                    usuarios.get(i).setTipo(tipo.isEmpty() ? usuarios.get(i).getTipo(): tipo); 
                }
            }
            llenarAdminTables();
        }
    }//GEN-LAST:event_ModificarUsuarioBtnActionPerformed

    private void DistribucionPuntosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DistribucionPuntosButtonActionPerformed
        PanelIndicaciones.setVisible(true);
    }//GEN-LAST:event_DistribucionPuntosButtonActionPerformed

    private void GuardarCalificacionesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCalificacionesButtonActionPerformed
        DefaultTableModel modelCalificaciones = (DefaultTableModel) CalificacionesTable.getModel();
        for (int count = 0; count < modelCalificaciones.getRowCount(); count++){
            int punt = Integer.parseInt(modelCalificaciones.getValueAt(count, 1).toString()) + Integer.parseInt(modelCalificaciones.getValueAt(count, 2).toString()) + Integer.parseInt(modelCalificaciones.getValueAt(count, 3).toString());
            for(Equipo equ: equipos){
                if(equ.getNombre().equals(modelCalificaciones.getValueAt(count, 0).toString())){
                    equ.setPuntos(equ.getPuntos()+punt);
                }
            }
        }
    }//GEN-LAST:event_GuardarCalificacionesButtonActionPerformed

    private void CerrarIndicacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarIndicacionesActionPerformed
        PanelIndicaciones.setVisible(false);
    }//GEN-LAST:event_CerrarIndicacionesActionPerformed

    private void CerrarSesionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarSesionBtnActionPerformed
        NoTorneoPanel.setVisible(false);
        NoTorneoJuezPanel.setVisible(false);
        JuezInternalFrame.setVisible(false);
        AdminInternalFrame.setVisible(false);
        PanelIndicaciones.setVisible(false);
        ParticipanteInternalFrame.setVisible(false);
        CerrarSesionBtn.setVisible(false);
        LogInPanel.setVisible(true);
    }//GEN-LAST:event_CerrarSesionBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame AdminInternalFrame;
    private javax.swing.JButton AgregarEquipoBtn;
    private javax.swing.JButton AgregarJuezBtn;
    private javax.swing.JButton AgregarTorneoBtn;
    private javax.swing.JButton AgregarUsuarioBtn;
    private javax.swing.JTable CalificacionesTable;
    private javax.swing.JButton CerrarIndicaciones;
    private javax.swing.JButton CerrarSesionBtn;
    private javax.swing.JTextField ContrasenaTxtPanel;
    private javax.swing.JTextField CorreoTxtPanel;
    private javax.swing.JButton DistribucionPuntosButton;
    private javax.swing.JTable EquiposTable;
    private javax.swing.JButton GuardarCalificacionesButton;
    private javax.swing.JTable JuecesTable;
    private javax.swing.JInternalFrame JuezInternalFrame;
    private javax.swing.JButton LogInBtnPanel;
    private javax.swing.JPanel LogInPanel;
    private javax.swing.JButton ModificarEquipoBtn;
    private javax.swing.JButton ModificarJuezBtn;
    private javax.swing.JButton ModificarTorneoBtn;
    private javax.swing.JButton ModificarUsuarioBtn;
    private javax.swing.JPanel NoTorneoJuezPanel;
    private javax.swing.JPanel NoTorneoPanel;
    private javax.swing.JPanel PanelIndicaciones;
    private javax.swing.JInternalFrame ParticipanteInternalFrame;
    private javax.swing.JTable PosicionesTable;
    private javax.swing.JLabel TorneoJuezLabel;
    private javax.swing.JLabel TorneoTxtPar;
    private javax.swing.JLabel TorneoTxtPar1;
    private javax.swing.JLabel TorneoTxtPar2;
    private javax.swing.JTable TorneosTable;
    private javax.swing.JTable UserTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel puntuacionPartxt;
    // End of variables declaration//GEN-END:variables
}

enum TipoUsuario
{
    Admin, Juez, Participante;
}
 
